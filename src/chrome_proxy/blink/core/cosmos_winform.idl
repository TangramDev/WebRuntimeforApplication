
[
	Exposed = Window
] interface CosmosWinform : CosmosXobj {

	// Message API
	CosmosNode getXobj(Element elem);
	CosmosNode getXobj(DOMString galaxyName, [DefaultValue = Undefined] optional DOMString clusterName, [DefaultValue = Undefined] optional DOMString gridName);
	CosmosGalaxy getGalaxy(DOMString galaxyName);

	void DispatchXobjEvent(Element elem, DOMString eventName);

	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute boolean isReady;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long formType;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute long long handle;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute CosmosNode mdibindgrid;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute CosmosNode mdiwebbindgrid;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute CosmosWinform mdiParent;
	[RuntimeEnabled = TrustedDOMTypes, Replaceable] readonly attribute CosmosWinform activeMDIChild;

	// Event handler attributes
	attribute EventHandler onLoadMdiChildWinForm;
	attribute EventHandler onCloudMessageForWinForm;
	attribute EventHandler onGalaxyCreated;
	attribute EventHandler onAllMdiChildRemoved;
	attribute EventHandler onMdiChildWinFormReady;
	attribute EventHandler onMdiWinFormReady;
	attribute EventHandler onWinFormReady;
	attribute EventHandler onWinFormClosed;
	attribute EventHandler onMdiChildActivate;
};
